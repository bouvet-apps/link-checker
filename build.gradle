plugins {
    id 'java'
    id 'maven-publish'
    id 'com.enonic.xp.app' version '3.4.0'
    id "com.github.node-gradle.node" version "7.0.0"
    id 'org.ajoberstar.grgit' version '4.1.1'
    id "com.github.ben-manes.versions" version '0.47.0'
}

sourceCompatibility = "1.11"
targetCompatibility = "1.11"

publishing {
    publications {
        maven(MavenPublication) {
            groupId = "${group}"
            artifactId = "${projectName}"
            version = "${version}"

            from components.java
        }
    }
}

app {
    name = project.ext.appName
    displayName = project.ext.displayName
    vendorName = project.ext.vendorName
    vendorUrl = project.ext.vendorUrl
    systemVersion = "${xpVersion}"
    keepArchiveFileName = true
}

sourceSets {
    main {
        resources {
            srcDir 'site'
        }
    }
}

task copyDist {
  dependsOn(':deploy')
  group 'application'
  description 'Copies jar file into dist folder'
  doLast {
    copy {
      from "build/libs/${projectName}-${version}.jar"
      into "dist/"
      rename ("${projectName}-${version}.jar", "${projectName}.jar")
    }
  }
}

task cleanDist(type: Delete) {
    delete "${rootDir}/dist/${projectName}.jar"
    println "Cleaned ${rootDir}/dist/${projectName}.jar"
}

task installWithCI(
        type: NpmTask,
        group: 'node',
        description: 'Install node dependencies with ci, ignoring scripts'
) {
    inputs.files "package.json"
    outputs.dir "./node_modules"
    args = ['ci', '--ignore-scripts', '--quiet']
}

task npm_install(
        type: NpmTask,
        group: 'node',
        description: 'Install node dependencies, ignoring scripts'
) {
    args = ['install', '--ignore-scripts', '--quiet']
}

task npmBuild(type: NpmTask,
        group: 'node',
        dependsOn: 'installWithCI',
        description: 'Transpile ES6 files'
    ) {
    args = ['run', 'build']

    inputs.dir 'src/main/resources'
    outputs.dir "$buildDir/resources/main"
}

jar.dependsOn npmBuild
build.finalizedBy(copyDist)

clean.dependsOn(cleanDist)

dependencies {
    implementation "com.enonic.xp:core-api:${xpVersion}"
    implementation "com.enonic.xp:portal-api:${xpVersion}"
    include "com.enonic.xp:lib-auth:${xpVersion}"
    include "com.enonic.xp:lib-content:${xpVersion}"
    include "com.enonic.xp:lib-context:${xpVersion}"
    include "com.enonic.xp:lib-i18n:${xpVersion}"
    include "com.enonic.xp:lib-portal:${xpVersion}"
    include "com.enonic.xp:lib-websocket:${xpVersion}"
    include 'com.enonic.lib:lib-cache:2.2.0'
    include 'com.enonic.lib:lib-http-client:3.2.2'
    include "com.enonic.lib:lib-thymeleaf:2.1.0"
}

repositories {
    mavenLocal()
    mavenCentral()
    xp.enonicRepo()
    maven { url 'https://jitpack.io' }
    maven { url 'https://repo.enonic.com/public' }
}

node {
    // Version of node to use.
    version = '18.17.1'
    // Version of npm to use.
    npmVersion = '9.8.1'
    // If true, it will download node using above parameters.
    // If false, it will try to use globally installed node.
    download = true
}

wrapper {
    gradleVersion = '8.3'
    distributionType = Wrapper.DistributionType.BIN
}
